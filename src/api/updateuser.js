import { fetchEdit } from "../store/signReducer";

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
function getToken() {
  try {
    const stored = localStorage.getItem("user");
    return JSON.parse(stored)?.user?.token || null;
  } catch {
    return null;
  }
}

export const fetchUpdate = (username, email, newpassword, image) => {
  return async (dispatch) => {
    const token = getToken();

    if (!token) {
      console.error("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.");
      return;
    }

    const userData = {
      username,
      email,
      password: newpassword,
    };

    if (image) {
      userData.image = image;
    }

    try {
      const response = await fetch(
        "https://blog-platform.kata.academy/api/user",
        {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Token ${token}`,
          },
          body: JSON.stringify({ user: userData }),
        }
      );

      if (!response.ok) {
        const errorText = await response.text(); // –ø–æ–∫–∞–∂–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        console.warn("‚ùå –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", errorText);

        console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", userData, token);
        throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${response.status}`);
      }

      const result = await response.json();
      dispatch(fetchEdit(result));
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error.message);
    }
  };
};
